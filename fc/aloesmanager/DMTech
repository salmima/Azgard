/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fc.aloesmanager;

import java.util.ArrayList;

/**
 *
 * @author Thao
 */
public abstract class DMT {

    protected ArrayList<Resultat> liste_resultats;
    protected ArrayList<PrescriptionExamen> liste_examens;
    protected String observations;
    protected String id;
    
    /**
     * Ajout d'un résultat à la liste d'examens
     */
    public void ajouterPrescription(PrescriptionExamen pres) {
        this.liste_examens.add(pres);
    }

    /**
     * Retourne les observations
     */
    public String getObs() {
        return this.observations;
    }

    /**
     * Retourne l'id
     */
    public String getId() {
        return this.id;
    }

    /**
     * Mise à jour deS observations
     */
    public void setObs(String obs) {
        this.observations = obs;
    }

    /**
     * Ajout d'un résultat à la liste de résultats
     */
    public void ajouterResultat(Resultat resultat) {
        this.liste_resultats.add(resultat);
    }
    
    
    /**
     * Récupération de la liste de résultats
     */
    public ArrayList<Resultat> getListeResultat() {
        return this.liste_resultats;
    }
    
     /**
     * Récupération de la liste de prescriptions d'examen
     */
    public ArrayList<PrescriptionExamen> getListePres() {
        return this.liste_examens;
    }
    
    /**
     * Ajouter un résultat
     */
    public abstract void ajouterResultat(Date date, PrescriptionExamen pres, String id, String observations, String compteRendu, String identifiant);
    
    /*
    * Méthode de recherche d'un DMT
     */
    public void rechercherUnDMT(String IPP, String identifiant, String secteur) {
                if (secteur.equals("biologie")) {
            DMT_Biologie dmt = new DMT_Biologie();
            dmt.rechercherUnDMBiologie(IPP, identifiant);
            return dmt;
        } else if (secteur.equals("hematologie")) {
            DMT_Hematologie dmt = new DMT_Hematologie();
            dmt.rechercherUnDMHematologie(IPP, identifiant);
            return dmt;
        } else if (secteur.equals("anatomopathologie")) {
            DMT_Anapath dmt = new DMT_Anapath();
            dmt.rechercherUnDMAnapath(IPP, identifiant);
            return dmt;
        } else if (secteur.equals("imagerie")) {
            DMT_Radio dmt = new DMT_Radio();
            dmt.rechercherUnDMRadio(IPP, identifiant);
            return dmt;
        } else if (secteur.equals("anesthesie")) {
            DMT_Anesthesie dmt = new DMT_Anesthesie();
            dmt.rechercherUnDMAnesthesie(IPP, identifiant);
            return dmt;
        }
        return null;
    }
    
    
    /**
     * Mise à jour des observations d'un dossier
     */
    public static void majObservations(String id, String observations, String secteur) {
         Connection con = ConnexionBDD.obtenirConnection();
        PreparedStatement majObs;
        try {
            if (secteur.equals("biologie")) {
                String requete = "UPDATE DMT_Biologie set observations = ? WHERE id = ?";
                majObs = con.prepareStatement(requete);
                majObs.setString(1, observations);
                majObs.setString(2, id);

                int nbMaj = majObs.executeUpdate();
                System.out.println("nb mise a jour = " + nbMaj); //affiche le nombre de mises à jour
            } else if (secteur.equals("hematologie")) {
                String requete = "UPDATE DMT_Hematologie set observations = ? WHERE id = ?";
                majObs = con.prepareStatement(requete);
                majObs.setString(1, observations);
                majObs.setString(2, id);


                int nbMaj = majObs.executeUpdate();
                System.out.println("nb mise a jour = " + nbMaj); //affiche le nombre de mises à jour
            } else if (secteur.equals("anatomopathologie")) {
                String requete = "UPDATE DMT_Anapath set observations = ? WHERE id = ?";
                majObs = con.prepareStatement(requete);
                majObs.setString(1, observations);
                majObs.setString(2, id);

                int nbMaj = majObs.executeUpdate();
                System.out.println("nb mise a jour = " + nbMaj); //affiche le nombre de mises à jour
            } else if (secteur.equals("imagerie")) {
                String requete = "UPDATE DMT_Radio set observations = ? WHERE id = ?";
                majObs = con.prepareStatement(requete);
                majObs.setString(1, observations);
                majObs.setString(2, id);

                int nbMaj = majObs.executeUpdate();
                System.out.println("nb mise a jour = " + nbMaj); //affiche le nombre de mises à jour
            } else if (secteur.equals("anesthesie")) {
                String requete = "UPDATE DMT_Anesthesie set observations = ? WHERE id = ?";
                majObs = con.prepareStatement(requete);
                majObs.setString(1, observations);
                majObs.setString(2, id);

                int nbMaj = majObs.executeUpdate();
                System.out.println("nb mise a jour = " + nbMaj); //affiche le nombre de mises à jour
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

}
